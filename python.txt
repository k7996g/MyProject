import win32com.client
import os
outlook=win32com.client.Dispatch("Outlook.Application").GetNameSpace("MAPI")
inbox=outlook.GetDefaultFolder(6) #Inbox default index value is 6
message=inbox.Items
message2=message.GetLast()
subject=message2.Subject
body=message2.body
date=message2.senton.date()   
sender=message2.Sender
attachments=message2.Attachments
print(subject)
print(body)
print(sender)
print(attachments.count)
print(date) 









import win32com.client, sqlite3
from datetime import datetime
def collectMail():
    conn = sqlite3.connect('outlook.db')
    i = 0
    try:
        outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")
        inbox = outlook.GetDefaultFolder(6)
        messages = inbox.Items
        print 'total messages: ', len(messages)
        message = messages.GetFirst ()
        while message:
            i += 1
            try:
                subject = message.Subject
                #print i, subject
                received_time = str(message.ReceivedTime)
                #print received_time
                received_time = datetime.strptime(received_time, '%m/%d/%y %H:%M:%S')
                #print message.EntryID
                html_body = message.HTMLBody
                size = long(message.Size)
                sender =  message.SenderName
                receiver = message.To
                cc = message.Cc
                body = message.Body
                conn.execute('insert into outlook(SUBJECT, SENDER, RECEIVER, CC, SIZE, RECEIVED_TIME, BODY, HTML_BODY) values(?, ?, ?, ?, ?, ?, ?, ?)', (subject, sender, receiver, cc, size, received_time, body, html_body))
                conn.commit()
            except:
                print i, 'skip'
                continue
            message = messages.GetNext()
    finally:
        print 'connection closed'
        conn.close()
collectMail()







import datetime
import os
import win32com.client


path = os.path.expanduser("~/Desktop/Attachments")
today = datetime.date.today()

outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")
inbox = outlook.GetDefaultFolder(6) 
messages = inbox.Items


def saveattachemnts(subject):
    for message in messages:
        if message.Subject == subject and message.Unread or message.Senton.date() == today:
            # body_content = message.body
            attachments = message.Attachments
            attachment = attachments.Item(1)
            for attachment in message.Attachments:
                attachment.SaveAsFile(os.path.join(path, str(attachment)))
                if message.Subject == subject and message.Unread:
                    message.Unread = False
                break
                
                
                
                
  
  
  
  
import win32com.client

outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI") #Opens Microsoft Outlook
folder = outlook.Folders[3]  #N4 Invocie folder
subFolder = folder.Folders[5]  #N4 Invoice subfolder
subFolderMessages = subFolder.Items  #Invoice items object
message = subFolderMessages.GetFirst() 

while True:
    subFolderItemAttachments = message.Attachments
    nbrOfAttachmentInMessage = subFolderItemAttachments.Count
    x = 1
    while x <= nbrOfAttachmentInMessage:
        attachment = subFolderItemAttachments.item(x)
        #Saves attachment to location
        attachment.SaveAsFile('C:\\Users\\kkim\\Desktop\\InvoiceOutlook' + '\\'+ str(attachment)) 
        break    
    message = subFolderMessages.GetNext() 
    
    
    
    
    
    
    
    
    import win32com.client
import csv

msglst = [('Subject', 'Body')]   # initialize the list and set the headers

outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")
inbox = outlook.GetDefaultFolder(6).Folders.Item("Mystatsonline")
messages = inbox.Items

message = messages.GetFirst()

while message:
  msglst.append((message.Subject, message.Body))   # append each subject/body pair to the list
  message = messages.GetNext()

with open('messages_list.csv','w', newline='', encoding='utf-8') as f:
    wrt = csv.writer(f, dialect='excel')
    wrt.writerows(msglst)
    
    
    
    
    
    https://sqa.stackexchange.com/questions/18342/how-to-handle-dynamic-changing-ids-in-xpath
    https://browsee.io/blog/strategies-to-handle-dynamic-web-elements-in-selenium/
    https://medium.com/@leportella/how-to-run-parallel-processes-8939dafae81e
    https://stackoverflow.com/questions/41543416/run-python-script-at-reception-of-email
    https://stackoverflow.com/questions/22600446/trigger-script-upon-email-receipt
    
    https://stackoverflow.com/questions/13377793/is-it-possible-to-get-an-excel-documents-row-count-without-loading-the-entire-d
    https://www.geeksforgeeks.org/reading-excel-file-using-python/
    https://kanoki.org/2019/04/12/pandas-how-to-get-a-cell-value-and-update-it/
    https://www.geeksforgeeks.org/python-pandas-dataframe-get_value/
    https://www.vitoshacademy.com/how-to-search-in-a-worksheet-with-python/
    https://www.quora.com/What-is-the-way-to-find-a-particular-keyword-from-Excel-using-Python
    https://stackoverflow.com/questions/32090002/searching-the-string-and-getting-the-row-and-column-value
    https://python-forum.io/Thread-find-cell-value-with-matching-regular-expression-of-a-row-in-excel-file
    https://docs.aspose.com/display/cellsjava/Inserting+and+Deleting+Rows+and+Columns+in+Python
    
    
    
    

